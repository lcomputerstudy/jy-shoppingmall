<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shoppingmall.example.mapper.OrderMapper">


 <!-- resultmap 되는 소스 	
	<resultMap id="User" type="User">
		<result column="user_name" property="name" />
		<result column="user_address" property="address" />
		<result column="user_phone" property="phone" />
	</resultMap>
	
	<resultMap id="Order" type="Order">
		<result column="o_id" property="id" />
		<result column="o_state" property="state" />
		<collection property="user" resultMap="User" />
	</resultMap>
 -->


<!--
	원래는 order와 product가 1:N의 관계가 되어야 한다. 
	바로 order와 product의 관계까 아니라,
	orderdetail은 product를 감싸고 있는 것과 비슷하다.  
	그래서 order과 orderdetail이 1:N관계가 되어야한다.
	-->

<!-- 1. order (1) : order_detail(N) -->
<!-- 2. order_detail (1) : product(1) , order_detail은 prodcut를 감싸고 있는 것과 비슷하다.-->
<!-- 3. product(1) : pruduct_img(N)  -->
	
	
	<resultMap id="OrderDetail" type="OrderDetail">
		<result column="od_id" property="od_id" />
		<result column="o_id"  property="o_id"/>
		<result column="od_price" property="price" />
		<result column="od_count" property="count" />
		<result column="pi_unique" property="image"/>
		<result column="p_name" property="product"/>
		<result column="p_id" property="p_id" />
	</resultMap>
	
	<resultMap id="UserInfo" type="UserInfo">
		<result column="user_name" property="name" />
		<result column="user_address" property="address" />
		<result column="user_phone" property="phone" />	
		<result column="user_id" property="username" />
	</resultMap>
	
	<resultMap id="OrderMap" type="Order">
		<result column="o_id" property="id" />
		<result column="o_date" property="date" />
		<result column="o_order_price" property="order_price" />
		<result column="o_total_price" property="total_price" />
		<result column="o_state" property="state" />
		<result column="user_id" property="user_id" />
		<result column="p_total_name" property="product"/>
		<association property="user" resultMap="UserInfo"></association>
		<collection property="orderdetail" resultMap="OrderDetail"></collection>
	</resultMap>

	<!-- ProductMapper로 이동해야함. 
	<select id="salesbytime" parameterType="Dateinfo" resultMap="OrderMap">	
		SELECT 			order_detail.p_id, 
						sum(od_count) order_count, 
						tc.p_name as name
		FROM 			order_detail
		
		JOIN 			(SELECT o_id
						 FROM orders
						 WHERE o_date between DATE(#{date1}) AND DATE(#{date2}))ta		
		ON ta.o_id = order_detail.o_id
		
		LEFT JOIN product tc
		ON order_detail.p_id = tc.p_id
		
		group by p_id
	</select>
 -->


	<select id="readSales_year" parameterType="Dateinfo" resultMap="OrderMap">
			SELECT		*
						FROM			
						(
							SELECT         ta.o_id,
										   ta.o_date,
										   tc.user_id,
										   tc.user_name,
										   tc.user_phone,
										   tb.o_order_price
																			
							FROM            orders ta
							LEFT JOIN       user tc
										    ON ta.user_id = tc.user_id
							left JOIN       (SELECT       o_id, 
									         sum(od_price * od_count) o_order_price 
									         FROM order_detail 
									         GROUP BY o_id
									         )tb ON ta.o_id = tb.o_id
												
								WHERE o_date BETWEEN date(#{date1}) AND date(#{date2})
						)ta,
						(		
								SELECT         SUM(tb.o_order_price) o_total_price
																												
								FROM            orders ta						
								JOIN            user tc
											    ON ta.user_id = tc.user_id
								left JOIN       (SELECT       o_id, 
										         sum(od_price * od_count) o_order_price 
										         FROM order_detail 
										         GROUP BY o_id
										         )tb ON ta.o_id = tb.o_id
											 		
								WHERE o_date BETWEEN DATE(#{date1}) AND DATE(#{date2})
						)tb
	</select>

	<select id="readSales_month" parameterType="Dateinfo" resultMap="OrderMap">
			SELECT		*
						FROM			
						(
							SELECT         ta.o_id,
										   ta.o_date,
										   tc.user_id,
										   tc.user_name,
										   tc.user_phone,
										   tb.o_order_price
																			
							FROM            orders ta
							LEFT JOIN       user tc
										    ON ta.user_id = tc.user_id
							left JOIN       (SELECT       o_id, 
									         sum(od_price * od_count) o_order_price 
									         FROM order_detail 
									         GROUP BY o_id
									         )tb ON ta.o_id = tb.o_id
												
								WHERE o_date BETWEEN date(#{date1}) AND date(#{date2})
						)ta,
						(		
								SELECT         SUM(tb.o_order_price) o_total_price
																												
								FROM            orders ta						
								JOIN            user tc
											    ON ta.user_id = tc.user_id
								left JOIN       (SELECT       o_id, 
										         sum(od_price * od_count) o_order_price 
										         FROM order_detail 
										         GROUP BY o_id
										         )tb ON ta.o_id = tb.o_id
											 		
								WHERE o_date BETWEEN DATE(#{date1}) AND DATE(#{date2})
						)tb
	</select>


	<select id="readSales_days" parameterType="Dateinfo" resultMap="OrderMap">
		SELECT		*
					FROM			
					(
							SELECT         ta.o_id,
							               ta.o_date,
										   tc.user_id,
										   tc.user_name,
										   tc.user_phone,
										   tb.o_order_price
																			
							FROM            orders ta
							LEFT JOIN       user tc
										    ON ta.user_id = tc.user_id
							left JOIN       (SELECT       o_id, 
									         sum(od_price * od_count) o_order_price 
									         FROM order_detail 
									         GROUP BY o_id
									         )tb ON ta.o_id = tb.o_id
												
							WHERE o_date BETWEEN date(#{date1}) AND date(#{date2})
					)ta,
					(		
							SELECT         SUM(tb.o_order_price) o_total_price
																											
							FROM            orders ta						
							JOIN            user tc
										       ON ta.user_id = tc.user_id
							left JOIN       (SELECT       o_id, 
									         sum(od_price * od_count) o_order_price 
									         FROM order_detail 
									         GROUP BY o_id
									         )tb ON ta.o_id = tb.o_id
										 		
							WHERE o_date BETWEEN DATE(#{date1}) AND DATE(#{date2})
					)tb
	</select>


	<select id="readSales_oneday" parameterType="Dateinfo" resultMap="OrderMap">
			SELECT		*
						FROM			
						(
							SELECT         ta.o_id,
							               ta.o_date,
										   tc.user_id,
										   tc.user_name,
										   tc.user_phone,
										   tb.o_order_price
																			
							FROM            orders ta
							LEFT JOIN       user tc
										    ON ta.user_id = tc.user_id
							left JOIN       (SELECT       o_id, 
									         sum(od_price * od_count) o_order_price 
									         FROM order_detail 
									         GROUP BY o_id
									         )tb ON ta.o_id = tb.o_id
												
							WHERE o_date = #{date1}
					)ta,
					(		
							SELECT         SUM(tb.o_order_price) o_total_price
																											
							FROM            orders ta						
							JOIN            user tc
										       ON ta.user_id = tc.user_id
							left JOIN       (SELECT       o_id, 
									         sum(od_price * od_count) o_order_price 
									         FROM order_detail 
									         GROUP BY o_id
									         )tb ON ta.o_id = tb.o_id
										 		
							WHERE o_date = #{date1}
					)tb
	</select>



	<delete id="orderDetailDelete" parameterType="Order">
		DELETE FROM order_detail where od_id=#{id}
	</delete>
	
	<update id="updateOrderDetail" parameterType="Order">
		update			order_detail					set
						od_count = #{count},
						od_price = #{price}
					
						where od_id = #{od_id}	
	</update>

	<select id="readOrder" parameterType="Order" resultMap="OrderMap">
		SELECT		    ta.o_id,
						o_date,
						SUM(tb.od_count*tb.od_price) o_total_price,
						o_state,
						user_id,
						GROUP_CONCAT( tc.p_name SEPARATOR ', ') p_total_name
						
		FROM			orders ta	
		LEFT JOIN       order_detail tb ON(ta.o_id = tb.o_id)
		LEFT JOIN   	 product tc ON(tb.p_id = tc.p_id)
		GROUP BY o_id
	</select>

	<select id="readOrderDetails" parameterType="Order" resultMap="OrderMap">
		SELECT  		tb.od_id,
						tb.od_price,
						tb.od_count,
						tb.p_id,
						tb.o_id,
						ta.o_state,
						ta.o_date,
						ta.o_id,
						tc.user_name,
						tc.user_address,
						tc.user_phone,
						td.o_total_price,
						te.p_name,
						tf.pi_image,
						tf.pi_unique
						
		FROM 			orders ta		
		LEFT JOIN 	order_detail tb ON (ta.o_id = tb.o_id)
		LEFT JOIN 	user tc ON (ta.user_id = tc.user_id)
		LEFT JOIN			
						(
						SELECT  		ta.o_id,
										SUM(tb.od_price*tb.od_count) o_total_price
						FROM 			orders ta		
						LEFT JOIN 	order_detail tb ON (ta.o_id = tb.o_id)
						GROUP BY 	ta.o_id
						) td ON ta.o_id = td.o_id
		LEFT JOIN   product te ON (tb.p_id = te.p_id)
		LEFT JOIN   product_img tf ON (te.p_id = tf.p_id)
	
		WHERE ta.o_id = #{id}
	</select>


</mapper>